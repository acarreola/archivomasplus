# Generated by Django 5.2.7 on 2025-10-15 21:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agencia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre de la agencia de publicidad', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Repositorio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(help_text='Nombre del cliente o proyecto', max_length=255, unique=True)),
                ('folio', models.CharField(help_text='Código único del repositorio (ej: lwohBX)', max_length=10, unique=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción del repositorio')),
                ('activo', models.BooleanField(default=True, help_text='Repositorio activo o inactivo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Comercial',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('archivo_original', models.FileField(blank=True, help_text='Archivo master original subido por el usuario.', max_length=512, null=True, upload_to='originals/')),
                ('ruta_proxy', models.CharField(blank=True, help_text='Ruta al archivo proxy H.265 transcodificado.', max_length=1024, null=True)),
                ('estado_transcodificacion', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('PROCESANDO', 'Procesando'), ('COMPLETADO', 'Completado'), ('ERROR', 'Error')], default='PENDIENTE', max_length=20)),
                ('pizarra', models.JSONField(blank=True, default=dict, help_text='Metadatos flexibles del comercial (producto, versión, etc.)')),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('repositorio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comerciales', to='core.repositorio')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nombre_compania', models.CharField(blank=True, max_length=255, verbose_name='Nombre de la Compañía')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('repositorios', models.ManyToManyField(blank=True, help_text='Repositorios a los que este usuario tiene acceso.', to='core.repositorio')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
