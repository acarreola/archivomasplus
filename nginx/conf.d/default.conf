# Upstream backends
upstream backend {
    server backend:8000 max_fails=3 fail_timeout=30s;
}

upstream frontend {
    server frontend:80 max_fails=3 fail_timeout=30s;
}

# HTTP Server (redirige a HTTPS en producción)
server {
    listen 80;
    server_name _;
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect to HTTPS (descomenta en producción con SSL)
    # return 301 https://$server_name$request_uri;
    
    # Temporal: servir directamente en HTTP para testing
    location / {
        try_files $uri @frontend;
    }

    # Frontend (React build)
    location @frontend {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # API Backend
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts para requests largos
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Admin Django
    location /admin/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Archivos estáticos de Django
    location /static/ {
        alias /app/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Archivos multimedia (videos, imágenes)
    location /media/ {
        alias /app/media/;
        
        # Configuración especial para archivos grandes
        location ~* \.(mp4|avi|mov|mkv|webm|m4v)$ {
            expires 1M;
            add_header Cache-Control "public";
            
            # Soporte para streaming de video
            mp4;
            mp4_buffer_size 1m;
            mp4_max_buffer_size 5m;
            
            # Headers para descarga progresiva
            add_header Accept-Ranges bytes;
        }
        
        # Imágenes y thumbnails
        location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
            expires 1M;
            add_header Cache-Control "public";
        }
    }

    # Uploads (con rate limiting estricto)
    location /api/upload/ {
        limit_req zone=upload burst=3 nodelay;
        client_max_body_size 2G;
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts extendidos para uploads
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }
}

# HTTPS Server (descomenta y configura para producción con SSL)
# server {
#     listen 443 ssl http2;
#     server_name tu-dominio.com www.tu-dominio.com;
# 
#     # SSL Configuration
#     ssl_certificate /etc/nginx/ssl/fullchain.pem;
#     ssl_certificate_key /etc/nginx/ssl/privkey.pem;
#     
#     # SSL Security
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # Security headers adicionales para HTTPS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#     
#     # Misma configuración que el server HTTP pero para HTTPS
#     location / {
#         try_files $uri @frontend;
#     }
#     
#     # ... resto de configuraciones igual que HTTP
# }